# version: 2.1

# jobs:
#   build:
#     docker:
#       - image: python:3.8

#     steps:
#       - checkout
#       # Add more steps as needed for your specific project setup

#   deploy:
#     docker:
#       - image: python:3.8

#     steps:
#       - checkout

#       - run:
#           name: Setup Snowflake Connection
#           command: |
#             echo "SNOWSQL_ACCOUNT: $SNOWSQL_ACCOUNT"
#             echo "SNOWSQL_USER: $SNOWSQL_USER"
#             echo "SNOWSQL_PASSWORD: $SNOWSQL_PASSWORD"

#       - run:
#           name: Install dbt
#           command: |
#             pip install dbt
#       - run:
#           name: Configure dbt Cloud
#           command: |
#             dbt cloud auth --token dbtc_5-DkHL8beLx8gZphVcSzX3RJQ0XuAH99W9hEm29Ftoe6OLaYFo

#       - run:
#           name: Run dbt
#           command: |
#             dbt run --select customer_details
      


# workflows:
#   version: 2
#   build-and-deploy:
#     jobs:
#       - build
#       - deploy:
#           requires:
#             - build
#           filters:
#             branches:
#               only:
#                 - main
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  dbt-cloud:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Pipeline builded"
          command: "Snowflake succeded!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows

workflows:
  say-hello-workflow:
    jobs:
      - say-hello